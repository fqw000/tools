name: Update reject-qx.list and proxy-qx.list

on:
  push:
    paths:
      - 'rule/reject.list'
      - 'rule/proxy.list'
    branches: [ main ]
  workflow_dispatch:

jobs:
  update-lists:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Read reject.list
      id: read_reject
      run: |
        # 读取 rule/reject.list 文件内容
        reject_content=$(cat 'rule/reject.list')
        echo "::set-output name=reject_content::$reject_content"
        
    - name: Read proxy.list
      id: read_proxy  
      run: |
        # 读取 rule/proxy.list 文件内容
        proxy_content=$(cat 'rule/proxy.list')
        echo "::set-output name=proxy_content::$proxy_content"
        
    - name: Update reject-qx.list
      run: |
        # 检查 rule/reject-qx.list 文件是否存在
        if [ -f 'rule/reject-qx.list' ]; then
          # 清空文件内容
          > 'rule/reject-qx.list'
        else
          # 创建新文件
          touch 'rule/reject-qx.list'
        fi
        
        # 修改 rule/reject.list 文件内容并保存到 rule/reject-qx.list
        echo "${{ steps.read_reject.outputs.reject_content }}" | sed -e 's/DOMAIN/HOST/' -e 's/URL-REGEX/# URL-REGEX/' > 'rule/reject-qx.list'
        
    - name: Update proxy-qx.list  
      run: |
        # 检查 rule/proxy-qx.list 文件是否存在
        if [ -f 'rule/proxy-qx.list' ]; then
          # 清空文件内容
          > 'rule/proxy-qx.list'
        else
          # 创建新文件
          touch 'rule/proxy-qx.list'
        fi
        
        # 修改 rule/proxy.list 文件内容并保存到 rule/proxy-qx.list
        echo "${{ steps.read_proxy.outputs.proxy_content }}" | sed -e 's/DOMAIN/HOST/' -e 's/URL-REGEX/# URL-REGEX/' > 'rule/proxy-qx.list'
        
    - name: Commit changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Update reject-qx.list and proxy-qx.list
        file_pattern: 'rule/reject-qx.list' 'rule/proxy-qx.list'
