# Base on default configure
# 配置文件官方说明： https://github.com/Loon0x00/LoonExampleConfig/blob/master/example.conf
# Update Date: 2023.03.22
# author: wangqifei
# https://raw.githubusercontent.com/fqw000/tools/main/loon/loon.conf
# 更新依赖：
# https://github.com/GeQ1an/Rules/tree/master/Loon

[General]
ipv6 = false
# 跳过某个域名或者IP段
skip-proxy = localhost,*.local,passenger.t3go.cn,e.crashlytics.com,captive.apple.com,seed-sequoia.siri.apple.com,sequoia.apple.com,10.0.0.0/8,100.64.0.0/10,127.0.0.1/32,169.254.0.0/16,172.16.0.0/12,192.168.0.0/16,192.168.122.1/32,193.168.0.1/32,224.0.0.0/4,240.0.0.0/4,255.255.255.255/32,::1/128,fc00::/7,fd00::/8,fe80::/10,ff00::/8,2001::/32,2001:db8::/32,2002::/16,::ffff:0:0:0:0/1,::ffff:128:0:0:0/1
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS server
dns-server = system,223.5.5.5,223.6.6.6,119.29.29.29,112.124.47.27,8.8.8.8,8.8.4.4,1.1.1.1
#, 223.6.6.6, 119.29.29.29, 1.2.4.8
# Doh server, only for Wireformat  Dot\Doq需要在配置-DNS—DNS服务器里手动配置。
# doh-server = https://dns.adguard-dns.com/dns-query, https://dns.alidns.com/dns-query
# doh3-server = https://223.5.5.5/dns-query, https://223.6.6.6/dns-query
#dot-server = tls://dns.daycat.space
# Wi-Fi 下通局域网网络共享访问
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# 网络测试 URL
proxy-test-url = http://www.gstatic.com/generate_204
# 或者用这个测速 http://www.qualcomm.cn/generate_204
# 测速超时
test-timeout = 5
interface-mode = auto
# 资源解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/backend/dist/sub-store-parser.loon.min.js
# 指定 WiFi SSID 运行模式
## 下方写法表示一般 WiFi 和移动蜂窝网络下为自动分流模式(rule), 名为 Stick 的 WiFi 下为直连模式，名为 Stick-5G 的 WiFi 下为代理模式
# ssid-trigger = "default": RULE, "cellular": RULE, "Stick": DIRECT, "Stick-5G": PROXY
ssid-trigger = "default": RULE, "cellular": RULE
real-ip = *.lan, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, global.turn.twilio.com, global.stun.twilio.com, localhost.*.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, *.cmpassport.com, id6.me, open.e.189.cn, mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, *.cmbchina.com.cn, *? miwifi.com, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, time.*.apple.com, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*
# 一个节点连续失败几次后进行节点切换
switch-node-after-failure-times = 3
[Host]
# DNS映射
# *.testflight.apple.com = server: 8.8.4.4

[Proxy]
# 内置 DIRECT、REJECT 策略
# ⭐️Loon支持 SS / SSR, Vmess(tcp / ws), Vless(tcp / ws), HTTP / S, Trojan
# 节点名称 = 协议，服务器地址，服务器端口，加密协议，密码
# 添加的本地节点名称修改为localA-localE可被策略组G-Local选择

# WAP+GSC
local A = Wireguard,interface-ip=172.16.0.2,interface-ipv6=2606:4700:110:8ea9:642c:49bc:17f3:b85,private-key="CLQJ+u6DuD/Y4/OpB6AzEOZCQERrNVcRhPkI+i21dkw=",mtu=1420,dns=162.159.36.1,dnsv6=2606:4700:4700::1111,keepalive=45,peers=[{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=",allowed-ips="0.0.0.0/0,::0/0",endpoint=162.159.195.8:2408}]
# local B = 
# local C = 
# local D = 


[Remote Proxy]
# 订阅内容为节点信息进行base64转码即可
wangqifei = 替换, udp=false,fast-open=true,vmess-aead=true,enabled=true,img-url=https://avatars.githubusercontent.com/u/8955860?s=400&u=673ea355e170f5040f5b1be45c01a42dc0286647&v=4
net = 替换, udp=false,fast-open=false,vmess-aead=true,enabled=true
[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式。节点筛选 ，筛选的范围可以是多个订阅组
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。 从wangqifei的节点订阅中筛选节点名称带有”tk“ 字符的PG-All。
# Proxy1 = NameKeyword, wangqfei, FilterKey = "tk"
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。 使用正则表达对wangqifei订阅中国呢对节点进行名称筛选，也可以是多个订阅组：Hulu = NameKeyword, Subs, Subs2, FilterKey = Hulu
# Loon正则筛选节点：
    # ^.* (A | B)  =  A或者B
    #(A.* B | B.* A) = 有A有B
    # ^ (? !.* A)    =   不含A 
    # ^ (? !.*? B).* A  =  有A但不含B
# Proxy2 = NameRegex, wangqifei, net, FilterKey = "^(?!.*(关键词1|关键词2)).*$"
# NodeSelect: 使用在UI上选择的节点。 
# 目前Loon商店版不起作用，待考证
# ProxyAll = NodeSelect, wangqifei, net, localA, localB, localC, localD
# ProxyAll = NameRegex,wangqifei, FilterKey = "^(?!.*(关键词1|关键词2)).*$"
[Proxy Group]
# 策略 /【策略组】  策略类型分为：select  ssid  url-test  fallback  load-valance
# 默认值的是按照顺序排在前面的第一个。
# 节点选项  PROXY = select, Auto, 1, 2, 3, 4, Subs
# 注意部分请求在reject后会不断重试，导致暴力请求，此时需要调整为reject-drop。
PG-Global = select,LoadBalance,LoadBalanceB,PG-Auto,net-Auto,PG-Local,wangqifei,net,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
LoadBalance = load-balance,ProxyAll,url = http://www.gstatic.com/generate_204,interval = 600,max-timeout = 3000,algorithm = pcc
LoadBalanceB = load-balance,net,url = http://www.gstatic.com/generate_204,interval = 600,max-timeout = 3000,algorithm = pcc
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
PG-Auto = url-test,wangqifei,url = http://www.gstatic.com/generate_204,interval = 600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin.png
net-Auto = url-test,net,url = http://www.gstatic.com/generate_204,interval = 600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin.png
PG-Local = select,localA, localB, LocalC, LocalD
# telegram在使用VPN时选择代理，不使用VPN时选择DIRECT，流量走自带的MTPROXY
PG-Telegram = select,PG-Global,DIRECT,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram_X.png
# soptify目前可以直连，默认直连，登陆换区时可能需要走代理
PG-Spotify = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
PG-AD = select,REJECT-DROP,REJECT,REJECT-IMG,REJECT-DICT,REJECT-ARRAYDIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png
PG-Domestic = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Domestic.png
PG-Final = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png

[Rule]
# 规则优先级：：：：从上到下，优先级本地 > 插件 > 订阅
# 自有服务器
DOMAIN,xiaohuojian.ml,PG-Global
DOMAIN-KEYWORD,chat.okis.dev,PG-Global
DOMAIN-KEYWORD,bing,PG-Global
DOMAIN-SUFFIX,inty.news,PG-Global
DOMAIN-SUFFIX,poe.com,PG-Global
DOMAIN-SUFFIX,poe.com,PG-Global
DOMAIN-SUFFIX,local,DIRECT
GEOIP, CN, DIRECT
FINAL, DIRECT
# FINAL, PG-Final

[Remote Rule]
# 避免规则重复冲突，规则排序建议 reject direct user-agent proxy，规则的执行顺序是自上而下的。

#--------广告拦截----------
# >域名、IP 去广告
https://raw.githubusercontent.com/fqw000/tools/main/rule/liby.list, policy=PG-AD, tag=域名、ip去广告, enabled=true
# >MTM正则表达去广告
https://raw.githubusercontent.com/fqw000/tools/main/rule/mitmregex.list, policy=PG-AD, tag=mitm正则去广告, enabled=true
# >个人维护去广告
https://raw.githubusercontent.com/fqw000/tools/main/rule/reject.list, policy=PG-AD, tag=自定义去广告, enabled=true
# >广告拦截
https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Reject.list, policy=PG-AD, tag=视频广告拦截, enabled=true

#--------APP分流----------
# >Spotify规则
https://raw.githubusercontent.com/fqw000/tools/main/rule/spotify.list, policy=PG-Spotify, tag=spotify, enabled=true
# >Telegram规则
https://raw.githubusercontent.com/fqw000/tools/main/rule/telegram.list, policy=PG-Telegram, tag=telegram, enabled=true

#--------代理规则----------
# 个人维护走代理
https://raw.githubusercontent.com/fqw000/tools/main/rule/proxy.list, policy=PG-Global, tag=自定义走代理, enabled=true
# 个人维护GFWLIST
https://raw.githubusercontent.com/fqw000/tools/main/rule/gfw.list, policy=PG-Global, tag=gfwlist走代理, enabled=true
# openai
https://raw.githubusercontent.com/fqw000/tools/main/rule/openai.list,policy=PG-Global, tag=ChatGPT, enabled=true

[Rewrite]
# Redirect Google Search Service 插件里有个cn到com到重定向，出现频繁跳转时需要关闭
# ^https?:\/\/(www.)?(g|google)\.cn 302 https://www.google.com
# ^https?+:\/\/youtubei\.googleapis\.com\/youtubei\/.+?(?>ad|log)_ reject-200
# ^https?+:\/\/.+?\.googlevideo\.com\/.+?(?>&oad|ctier) reject-200

# 河南健康码（健康码已取消，网站已经做下线处理）此rewrite已调整为独立插件“我爱祖国和人民”使用
# ^(http|https):\/\/safetrip\.zhengzhou\.gov\.cn.*$ 307 http://wangqifei.ml/henan-hc/checkin.html

[Remote Rewrite]
# Loon订阅重写取消，和插件功能合并了
# https://raw.githubusercontent.com/28413761/QX/main/chongxie.txt, tag=开屏去广告, enable=false

[Script]
enable = true

# 屏蔽内容农场
http-response ^https?:\/\/(www\.google)(\.\w{2,4}){1,2}\/(search\?|\?sa=|\?FORM)(?!.*?(apps=)) script-path=https://limbopro.com/Adguard/Adblock4limbo.js, timeout=10, tag=Adblock4limbo.js
#微信打开屏蔽链接，需要添加mitm hostname  weixin110.qq.com
http-response ^https?:\/\/weixin110\.qq\.com\/cgi-bin\/mmspamsupport-bin\/newredirectconfirmcgi script-path=https://raw.githubusercontent.com/HotKids/Rules/master/Script/weixin110.js, requires-body=true, timeout=10, tag=微信url解除
# Sptoify Premium脚本
# 注意需要配置mitm后才能生效
# 来自@app2smile 不使用mitm和script的直接配置，使用spotifyPremuin.plugin以插件形式导入也一样使用。https://raw.githubusercontent.com/fqw000/tools/main/spotifypremium.plugin
http-response ^https:\/\/spclient\.wg\.spotify\.com\/(bootstrap\/v1\/bootstrap|user-customization-service\/v1\/customize)$ script-path=https://raw.githubusercontent.com/fqw000/tools/main/script/spotifypremium.js, requires-body=true, binary-body-mode=true, timeout=10, tag=spotifyPremium, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
# Spotify Lyric歌词翻译
# 注意需要配置mitm后才能生效
# 来自@app2smile 使用说明 https://raw.githubusercontent.com/app2smile/rules/master/js/spotify-lyric.js  修改下方argument中的appid和securityKey,填入自己的appid和key
http-response ^https:\/\/spclient\.wg\.spotify\.com\/color-lyrics\/v2\/track\/ script-path=https://raw.githubusercontent.com/app2smile/rules/master/js/spotify-lyric.js, requires-body=true, binary-body-mode=true, timeout=10, tag=Spotify歌词翻译, argument="appid=20220712001271191&securityKey=1XIPEOzEJ0op8KQPy6uO"

[Remote Script]

[Plugin]
# https://example.com/loon.js, tag=scripts, enable=true

# youtube去广告
# https://raw.githubusercontent.com/app2smile/rules/master/plugin/youtube.plugin, enabled=true
https://raw.githubusercontent.com/Maasea/sgmodule/master/YoutubeAds.sgmodule, tag=去除 Youtube 广告, enabled=true


# 修改百度user-agent为移动端，实现去广告
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Replace_baidu_search_user-agent.plugin, enabled=true

# LOON订阅资源转换
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/RemoteResourceConverter.plugin, enabled=true

# 去除开屏广告
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Remove_splash_screen_ads.plugin, enabled=true

# b站去广告
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Bilibili_remove_ads.plugin, enabled=true

# 高德去广告
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Amap_remove_ads.plugin, enabled=true

# 小红书去广告
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/RedPaper_remove_ads.plugin, enabled=true

# 京东比价
# https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/JD_Price.plugin, tag=京东比价, enabled=true
# 脚本转换
# https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/JavaScriptConverter.plugin, tag=脚本转换器, enabled=true
# NICegram会员
# https://raw.githubusercontent.com/deezertidal/private/master/plugallery/nicegram.plugin, tag=NIcegram会员, enabled=true
#目前试用的是trollstore版的youtube破解版不需要此youtube插件。
# https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/YouTube_remove_ads.plugin, tag=youtube去广告, enabled=true
# ipad在用的wps会员
# https://raw.githubusercontent.com/I-am-R-E/Functional-Store-Hub/Master/WPSOffice/Loon.plugin, tag=wps会员, enabled=true
# 插件仓库
# https://raw.githubusercontent.com/Peng-YM/Loon-Gallery/master/loon-gallery.plugin, tag=插件仓库, enabled=true
# 解决谷歌中国页面需要二次点击跳转，目前stick rules for rewrite里包含了此部分数据。重复启用会出现太多重定向而不能访问。
# https://raw.githubusercontent.com/fqw000/tools/main/plugin/googlerewrite.sgmodule, tag=google重定向cn hk到com, enabled=false
# 广告联盟去广告
https://raw.githubusercontent.com/app2smile/rules/master/plugin/adsense.plugin, tag=广告联盟(快手联盟 优量汇 穿山甲), enabled=true
# 河南健康码（本地规则写到也有，是重复）
# https://raw.githubusercontent.com/fqw000/tools/main/plugin/woaizuguo.sgmodule, tag=我爱祖国和人民, enable=false
# 常用重写规则与一些广告屏蔽stick rules for rewrite，来自 https://github.com/GeQ1an/Rules/tree/master/Loon
https://raw.githubusercontent.com/GeQ1an/Rules/master/Loon/Rewrite/Rewrite.plugin, tag=Stick Rules for Rewrite, enabled=true
# 综合重写去广告。rewrite.plugin里包含了bilibili 、qqnews、知乎、youtube
https://raw.githubusercontent.com/fqw000/tools/main/plugin/Rewrite.plugin, tag=综合重写去广告, enabled=true
# GitHub加速，没问题不要启用。
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/GitHub.plugin, tag=github加速, enabled=false
#流媒体字幕语言配合boxjs使用 from github by dualsubs
https://raw.githubusercontent.com/DualSubs/DualSubs/main/plugin/DualSubs.plugin, tag=🍿️ DualSubs for Streaming Media Platform, enabled=false
# Boxjs
# https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, tag=BoxJs, enabled=false
# 抖音屏蔽
# https://raw.githubusercontent.com/dunlanl/FuGfConfig/main/ConfigFile/Loon/LoonPlugin/FuckDouyin.plugin, tag=抖音屏蔽, enabled=true
# 破解sptoify premium脚本, 来自@app2smile 使用插件或者脚本都可以。
# https://raw.githubusercontent.com/app2smile/rules/master/plugin/spotify.plugin, tag=Spotify premium, enabled=false
# 微信外链
https://gitlab.com/lodepuly/vpn_tool/raw/main/Tool/Loon/Plugin/Weixin_external_links_unlock.plugin, tag=微信开放所有外链, enbaled=true

[MITM]
# 请在正式使用前将其他已信任证书的 P12 及密码填入下方或者前往设置界面生成、安装并信任新证书
hostname = safetrip.zhengzhou.gov.cn
enable = true
skip-server-cert-verify = true
ca-p12 = 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
ca-passphrase = 37V4EVVC